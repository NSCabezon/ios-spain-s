//
//  FiltersRouter.swift
//  LocatorApp
//
//  Created Ivan Cabezon on 23/8/18.
//  Copyright © 2018 Globile. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

protocol FilterDelegate: class {
    func apply(_ filters: [Filter])
}

protocol FiltersWireframeProtocol: class {
	func canOpenURL(url: URL) -> Bool
	func openURL(url: URL)
}

class FiltersRouter: FiltersWireframeProtocol {
    
    weak var viewController: UIViewController?
	var urlLauncher: URLLauncher?
	
	static func createModule(filterDelegate: FilterDelegate, shouldShowTitle: Bool = true, availableFilters: [FilterTypeProtocol], urlLauncher: URLLauncher?) -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = FiltersViewController.initFromStoryboard()
        let interactor = FiltersInteractor()
        let router = FiltersRouter()
        let presenter = FiltersPresenter(interface: view, filterDelegate: filterDelegate, interactor: interactor, router: router)
        
        view.shouldShowTitle = shouldShowTitle
        view.presenter = presenter
		presenter.availableFilters = availableFilters
        interactor.presenter = presenter
        router.viewController = view
		router.urlLauncher = urlLauncher
        
        return view
    }
	
	func canOpenURL(url: URL) -> Bool {
		return urlLauncher?.canOpen(url: url) ?? false
	}
	
	func openURL(url: URL) {
		urlLauncher?.open(url: url)
	}
}
