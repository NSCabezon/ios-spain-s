//
//  POIDetailRouter.swift
//  LocatorApp
//
//  Created Ivan Cabezon on 22/8/18.
//  Copyright © 2018 Globile. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

// MARK: Wireframe -

protocol POIDetailWireframeProtocol: class {
	
	func navigateToDestination(latitude: Double, longitude: Double)
	func canOpenURL(url: URL) -> Bool
	func openURL(url: URL)
}

class POIDetailRouter: POIDetailWireframeProtocol {
    
    weak var viewController: UIViewController?
	var urlLauncher: URLLauncher?
    var navigationMaps: [Maps] = []
    
    static func createModule(urlLauncher: URLLauncher?, navigationMapsList: [Maps]) -> POIDetailViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = POIDetailViewController.initFromStoryboard()
        let interactor = POIDetailInteractor()
        let router = POIDetailRouter()
        let presenter = POIDetailPresenter(interface: view, interactor: interactor, router: router)
         
        router.navigationMaps = navigationMapsList
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
		router.urlLauncher = urlLauncher
        
        return view
    }
	
	func navigateToDestination(latitude: Double, longitude: Double) {
		if let urlLauncher = urlLauncher {
            BranchLocator.navigateToDestination(latitude: latitude, longitude: longitude, urlLauncher: urlLauncher, navigationMaps: self.navigationMaps)
		}
	}
	
	func canOpenURL(url: URL) -> Bool {
		return urlLauncher?.canOpen(url: url) ?? false
	}
	
	func openURL(url: URL) {
		urlLauncher?.open(url: url)
	}
}
