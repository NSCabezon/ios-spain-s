//
//  AccessibilityAccounts.swift
//  Commons
//
//  Created by Laura Gonz√°lez on 05/03/2020.
//

import Foundation

public enum AccessibilityAccountsHome {
    public static let btnPDF = "btnPDF"
    public static let btnFilter = "btnFilter"
    public static let icnShare = "icnShare"
    public static let icnEdit = "icnEdit"
    public static let icnGrayShare = "icnGrayShare"
    public static let icnInfoRedLight = "icnInfoRedLight"
    public static let btnDeleteFilters = "btnDeleteFilters"
    public static let accountsHomeListTransactions = "accountsHomeListTransactions"
    public static let accountAliasPiggyBank = "AccountAliasPiggyBank"
    public static let accountIbanPiggyBank = "AccountIbanPiggyBank"
    public static let accountHomeLabelSavingTot = "accountHome_label_savingTot"
    public static let accountImportPiggyBank = "AccountImportPiggyBank"
    public static let imgPiggyBanksBig = "imgPiggyBanksBig"
    public static let accountHomeViewAccountData = "accountHomeViewAccountData"
    public static let accountHomeAvailableBalance = "accountHome_label_availableBalance"
    public static let accountHomeRealBalance = "accountHome_label_realBalance"
    public static let buttonFilters = "generic_button_filters"
    public static let buttonPDF = "generic_button_downloadPDF"
    public static let buttonShare = "generic_button_share"
    public static let tooltipButton = "generic_label_moreInfo"
    public static let buttonMoreOptions = "cardsOption_label_moreOptions"
}

public enum AccessibilityAccountTransaction {
    public static let relatedCarouselTitle = "transactionDetail_title_related"
    public static let relatedTransactionDate = "relatedTransaction_label_operationDate"
}

public enum AccesibilityAccountsHomeAction {
    public static let accountsHomeTopLabel = "cardsOption_label_moreOptions"
    public static let accountsHomeCloseBtn = "accountOptionBtnClose"
    public static let accountsHomeBtnTransfer = "accountsHomeBtnTransfer"
    public static let accountsHomeLabelTransfer = "accountOption_button_transferAccount"
    public static let accountsHomeBtnBillsAndTaxes = "accountsHomeBtnBillsAndTaxes"
    public static let accountsHomeLabelBillsAndTaxes = "accountOption_button_billsAndTaxes"
    public static let accountsHomeBtnRequestMoney = "accountsHomeBtnRequestMoney"
    public static let accountsHomeLabelRequestMoney = "accountOption_button_requestMoney"
    public static let accountsHomeBtnInternalTransfer = "accountsHomeBtnInternalTransfer"
    public static let accountsHomeLabelInternalTransfer = "accountOption_button_InternalTransfer"
    public static let accountsHomeBtnFavoriteTransfer = "accountsHomeBtnFavoriteTransfer"
    public static let accountsHomeLabelFavoriteTransfer = "accountOption_button_sendFavorite"
    public static let accountsHomeBtnFxPay = "accountsHomeBtnFxPay"
    public static let accountsHomeLabelFxPay = "accountOption_button_onePay"
    public static let accountsHomeBtnPayBill = "accountsHomeBtnPayBill"
    public static let accountsHomeLabelPayBill = "accountOption_button_PayBill"
    public static let accountsHomeBtnPayTax = "accountsHomeBtnPayTax"
    public static let accountsHomeLabelPayTax = "accountOption_button_payTaxes"
    public static let accountsHomeBtnReturnBill = "accountsHomeBtnReturnBill"
    public static let accountsHomeLabelReturnBill = "accountOption_button_returnedReceipt"
    public static let accountsHomeBtnForeignExchange = "accountsHomeBtnForeignExchange"
    public static let accountsHomeLabelForeignExchange = "accountOption_button_foreignExchange"
    public static let accountsHomeBtnChangeDomicileReceipt = "accountsHomeBtnChangeDomicileReceipt"
    public static let accountsHomeLabelChangeDomicileReceipt = "accountOption_button_domicileReceipt"
    public static let accountsHomeBtnCancelBill = "accountsHomeBtnCancelBill"
    public static let accountsHomeLabelCancelBill = "accountOption_button_cancelReceipt"
    public static let accountsHomeBtnRequestBizum = "accountsHomeBtnRequestBizum"
    public static let accountsHomeLabelRequestBizum = "accountOption_button_askBizum"
    public static let accountsHomeBtnDonationBizum = "accountsHomeBtnDonationBizum"
    public static let accountsHomeLabelDonationBizum = "accountOption_button_donationBizum"
    public static let accountsHomeBtnDonation = "accountsHomeBtnDonation"
    public static let accountsHomeLabelDonation = "accountOption_button_donations"
    public static let accountsHomeBtnAccountDetail = "accountsHomeBtnAccountDetail"
    public static let accountsHomeLabelAccountDetail = "accountOption_button_accountDetail"
    public static let accountsHomeBtnHistoricalEmitted = "accountsHomeBtnHistoricalEmitted"
    public static let accountsHomeLabelHistoricalEmitted = "accountOption_button_historicalEmitted"
    public static let accountsHomeBtnOne = "accountsHomeBtnOne"
    public static let accountsHomeLabelOne = "accountOption_button_One"
    public static let accountsHomeBtnContractAccount = "accountsHomeBtnContractAccount"
    public static let accountsHomeLabelContractAccount = "accountOption_button_ContractAccount"
    public static let accountsHomeBtnOwnershipCertificate = "accountsHomeBtnOwnershipCertificate"
    public static let accountsHomeLabelOwnershipCertificate = "accountOption_button_ownershipCertificate"
    public static let accountsHomeBtnCorreosCash = "accountsHomeBtnCorreosCash"
    public static let accountsHomeLabelCorreosCash = "accountOption_button_CorreosCash"
    public static let accountsReceiptFinancing = "accountsReceiptFinancing"
    public static let accountsLabelReceiptFinancing = "accountOption_button_ReceiptFinancing"
    public static let accountsBtnCrossSelling = "accountHomeCrossSellingOffer"
    public static let accountsLabelCrossSelling = "accountOption_button_CrossSellingOffer"
    public static let crossSellingLocation = "accountHomeBtnLocationCrossSelling"
    public static let crossSellingLocationLabel = "accountOption_button_LocationCrossSelling"
    public static let accountsHomeAutomaticOperations = "accountOptionBtnAutomaticOperations"
    public static let accountsHomeLabelAutomaticOperations = "accountOption_button_AutomaticOperations"
}

public enum AccessibilityWithholdingView {
    public static let btnCloseModal = "btnCloseModal"
    public static let icnCloseModal = "icnCloseModal"
    public static let icnRetentions = "icnRetentions"
    public static let tooltipTitleWithholding = "tooltip_title_withholding"
    public static let withholdingLabelTotal = "withholding_label_total"
    public static let withholdingHeaderLabelAmount = "withholding_header_label_amount"
    public static let imgLoadingTransactionsLoading = "imgLoading_transactionsLoading"
    public static let loadingLabelTransactionsLoading = "loading_label_transactionsLoading"
    public static let imgLeaves = "imgLeaves"
    public static let withholdingLabelEmpty = "withholding_label_empty"
    public static let productTitleEmptyError = "product_title_emptyError"
    public static let productLabelEmptyError = "product_label_emptyError"
    public static let tooltipLabelWithholding = "tooltip_label_withholding"
    public static let withholdingView = "withholding_view"
    public static let withholdingLabelEntrydate = "withholding_label_entrydate"
    public static let withholdingLabelConcept = "withholding_label_concept"
    public static let withholdingLabelAmount = "withholding_label_amount"
    public static let withholdingLabelConsolidated = "withholding_label_consolidated"
    public static let withholdingLabelLeavingDate = "withholding_label_leavingdate"
}

public enum AccessibilityAccountDetail {
    public static let accountAlias = "accountAlias"
    public static let accountIban = "accountIban"
    public static let accountAvailableBalanceLabel = "accountAvailableBalanceLabel"
    public static let accountAvailableBalanceAmount = "accountAvailableBalanceAmount"
    public static let accountCopyIcon = "accountCopyIcon"
    public static let titleDetail = "titleDetail"
    public static let subtitleDetail = "subtitleDetail"
    public static let shareIconDetail = "shareIconDetail"
    public static let editIconDetail = "editIconDetail"
    public static let editAliasTextFieldDetail = "editAliasTextFieldDetail"
    public static let titlePerfect = "titlePerfect"
    public static let subtitlePerfect = "subtitlePerfect"
    public static let ticImage = "ticImage"
    public static let perfectView = "perfectView"
    public static let accountTooltip = "accountTooltip"
    public static let icnAccountTooltip = "icnAccountTooltip"
    public static let accountRetentionLabel = "accountRetentionLabel"
    public static let accountRetentionAmount = "accountRetentionAmount"
    public static let accountHeaderView = "accountHeaderView"
    public static let detailView = "detailView"
    public static let mainLabel = "mainLabel"
    public static let titleMainView = "titleMainView"
    public static let switchMainButton = "switchMainButton"
    public static let tooltipButton = "generic_label_moreInfo"
    public static let copyIBAN = "generic_button_copy"
    public static let editAlias = "voiceover_editAlias"
    public static let buttonShare = "voiceover_shareIban"
    public static let selectedAsMainAccount = "voiceover_mainAccount"
    public static let productDetailLabelIban = "productDetail_label_iban"
    public static let productDetailValueIban = "productDetail_value_iban"
    public static let productDetailLabelAlias = "productDetail_label_alias"
    public static let productDetailValueAlias = "productDetail_value_alias"
    public static let productDetailLabelHolder = "productDetail_label_holder"
    public static let productDetailValueHolder = "productDetail_value_holder"
}

public enum AccessibilityAccountFilter {
    public static let searchConceptView = "searchConceptView"
    public static let conceptTitleView = "search_button_searchName"
    public static let conceptTextField = "searchInputSearch"
    public static let titleConceptTextField = "search_label_concept"
    public static let fieldConceptTextField = "search_text_concept"
    public static let icnConceptTextField = "icnSearchInput"
    public static let segmentedControlView = "shearchSegmentedControlView"
    public static let segmentedTitleLabel = "segmented_titleLabel"
    public static let segmentedControlViewContent = "searchSegmentedExpenseIncomes"
    public static let dateFilterView = "searchDateFilterView"
    public static let titleDateFilter = "search_label_datesRange"
    public static let timeSegmentedControl = "searchSegmentedDatesRange"
    public static let yearLabelMonthView = "search_yearLabel_MonthsView"
    public static let leftArrowYearMonthView = "search_leftArrow_MonthsView"
    public static let rightArrowYearMonthView = "search_RightArrow_MonthsView"
    public static let startDateTextField = "searchInputStarDate"
    public static let titleStartDateTextField = "search_label_startDate"
    public static let dateStartDateTextField = "search_text_startDate"
    public static let icnStartDateTextField = "icnCalendarStart"
    public static let endDateFilter = "searchInputEndDate"
    public static let titleEndDateTextField = "search_label_endDate"
    public static let dateEndDateTextField = "search_text_endDate"
    public static let icnEndDateTextField = "icnCalendarEnd"
    public static let amountRangeView = "searchAmountRangeView"
    public static let amountTitleView = "search_label_value"
    public static let arrowUpSectionAmount = "searchBtnSwipeUp_amount"
    public static let arrowDownSectionAmount = "searchBtnSwipeDown_amount"
    public static let fromAmountTextField = "searchBtnFromAmount"
    public static let titleFromAmountTextField = "search_label_since"
    public static let amountFromAmountTextField = "search_amount_since"
    public static let icnFromAmountTextField = "icnCurrency_since"
    public static let toAmountTextField = "searchBtnToAmount"
    public static let titleToAmountTextField = "search_label_until"
    public static let amountToAmountTextField = "search_amount_until"
    public static let icnToAmountTextField = "icnCurrency_until"
    public static let operationTypeView = "searchOperationTypeView"
    public static let titleOperationType = "search_label_operation"
    public static let typePickerOperationType = "serchInputTypeOfOperation"
    public static let icnPickerOperationType = "icnArrowOperationType"
    public static let arrowUpSectionOperationType = "searchBtnSwipeUp_operationType"
    public static let arrowDownSectionOperationType = "searchBtnSwipeDown_operationType"
    public static let applyButton = "searchBtnApply"
    public static let applyButtonView = "searchViewApply"
}

public enum AccessibilityAccountFilterSegmenteds {
    public static let tabAll = "search_tab_all"
    public static let tabExpenses = "search_tab_expenses"
    public static let tabDeposit = "search_tab_deposit"
}

public enum AccessibilityAccountTransactionDetail: String, CaseIterable {
    case balance = "balance"
    case sener = "sender"
    case senderAccount = "senderAccount"
    case beneficiary = "beneficiary"
    case beneficiaryAccount = "beneficiaryAccount"
    case concept = "concept"
    case cost = "cost"
}

public enum AccessibilityAccountTransactionCell {
    public static let arrowImageDown = "icnOvalButtonDown"
    public static let arrowImageUp = "icnOvalButtonUp"
    public static let conceptLabel = "transaction_label_concept"
    public static let accountAliasLabel = "transaction_label_alias"
    public static let amountLabel = "transaction_label_amount"
    public static let operationDateTitleLabel = "transaction_label_operationDate"
    public static let operationDateValueLabel = "transaction_value_operationDate"
    public static let dateTitleLabel = "transaction_label_valueDate"
    public static let dateValueLabel = "transaction_value_valueDate"
    public static let expandOrCollapsButton = "transaction_button_expandOrCollaps"
    public static let addPdfButton = "generic_button_viewPdf"
    public static let addPdfTitle = "transaction_label_pdf"
    public static let addPdfImage = "icnPdf"
    public static let addTransferButton = "transactionBtnSendMoney"
    public static let addTransferTitle = "transaction_label_transfer"
    public static let addTransferImage = "icnSendMoney"
    public static let addBillButton = "transactionBtnBillTaxes"
    public static let addBillTitle  = "transaction_label_bill"
    public static let addBillImage  = "icnBill"
    public static let addShareButton = "transactionBtnShare"
    public static let addShareTitle = "transaction_label_share"
    public static let addShareImage = "icnShare"
    public static let addReturnBillButton = "transactionReturnReceipt"
    public static let addReturnBillTitle = "transaction_label_returnBill"
    public static let addReturnBillImage = "icnReturnReceipt"
    public static let addSplitExpensesButton = "transactionBtnExpensesDivide"
    public static let addSplitExpensesTitle = "transaction_label_splitExpenses"
    public static let addSplitExpensesImage = "icnDivide"
    public static let addPayBillButton = "transactionBtnBillTaxes"
    public static let addPayBillTitle = "transaction_label_payBill"
    public static let addPayBillImage = "icnPayTax"
    public static let loadingView = "transaction_image_loading"
    public static let easyPayButton = "easyPayButton"
}
